.newItemBox {
    position: relative;
    width: 100%;
    animation: fadeIn 2s;
    display: flex;
    flex-direction: column;
    justify-items: center;
    align-items: center;
    font-family: 'Oswald', sans-serif;
}

@keyframes fadeIn {
    from {
        opacity: 0;
    }

    to {
        opacity: 1;
    }
}

@keyframes fadeOut {
    from {
        opacity: 1;
    }

    to {
        opacity: 0;
    }
}

.newitemForm {
    position: relative;
    border-radius: 5px;
    margin-top: 2rem;
    padding: 10px;
    background-color: rgb(60, 46, 73);
    color: white;
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
    justify-content: center;
    align-items: center;
    box-shadow: 6px 6px 20px rgba(16, 18, 18, 0.5);
}

.invalidAddress {
    transition: all 2s;
    color: red;
}

.newitemForm label {
    margin-top: 10px;
}

.newitemForm input {
    max-width: 300px;
    min-width: 300px;
    padding: 5px;
    border: none;
}

.newitemForm input::placeholder {
    font-size: 12px;
}

.newitemForm input:focus {
    outline: none;
}

.newitemForm button {
    border: none;
    padding: 5px 10px;

}

.uploadSection {
    display: flex;
    flex-direction: column;
    justify-content: center;
    background-color: white;
    padding: 2px;
    margin-top: 1rem;
    margin-bottom: 1rem;
    box-shadow: 2px 2px rgb(167, 166, 163);
    animation: fadeIn 2s;
}

.uploadImage {
    display: flex;
    flex-direction: column;
    justify-content: center;
    padding: 5px;
    height: auto;
    background-color: rgb(252, 252, 252);
    color: black;
    border: 2px dashed rgb(43, 42, 42);
    transition: all 1.2s ease-in-out;

}

.uploadImage.imgError {
    position: relative;
    border: 2px dashed rgb(250, 3, 3) !important;
    color: red !important;
}

.uploadImage.imgError::after {
    position: absolute;
    right: 0%;
    font-size: 10px;
    bottom: 0%;
    padding: 5px;
    width: 80px;
    content: 'Add Image!';
}

.uploadImage:hover {
    border-color: orange;
    color: orange;
}

.uploadBtn {
    display: flex;
    flex-direction: column;
    justify-items: center;
    align-items: center;
}

.imageInput {
    width: 0px;
    height: 0px;
    display: none;
}

.uploadIcon {
    font-size: 20px;
    font-style: bold;
    transition: transform .2s;
    cursor: pointer;
}

.displayImage {
    position: relative;
}

.uploadedImage {
    margin-top: 10px;
    border-radius: 5px;
    width: 170px;
    height: 170px;
}

.deleteImgBtn {
    position: absolute;
    top: 11px;
    right: 2px;
    border-radius: 30%;
    color: white;
    background-color: rgba(88, 82, 82, 0.5);
    cursor: pointer;
    outline: none;
    font-size: 12px;
    transition: all 2s ease-in-out;
}

.deleteImgBtn:hover {
    color: red;
}

.uploadIcon:hover {
    transform: scale(1.5);
    background-color: black;
    border-radius: 50%;
    color: white;
}

.analyzerList {
    width: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    position: relative;
}

.analyzerList select {
    background-image: linear-gradient(to top, rgb(171, 168, 168), rgb(223, 218, 218) 33%);
    min-height: 5rem;
    padding: 5px;
    max-height: 5rem;
    border: none;
    min-width: 240px;
    max-width: 240px;
}

.analyzerList label::after {
    content: " Parameter & SIN";
    font-size: 10px;
    font-style: italic;
    color: rgba(244, 206, 68, 0.5);
}

.analyzerList select option {
    background-color: rgb(246, 237, 237);
    margin-top: 5px;
    border-radius: 5px;
    cursor: pointer;
    text-align: center;
    font-weight: 700;
}

.analyzerList select option:hover {
    animation: shake 0.82s cubic-bezier(.36, .07, .19, .97) both;
    transform: translate3d(0, 0, 0);
    backface-visibility: hidden;
    perspective: 1000px;
    background-color: rgb(232, 129, 12);
    color: white;
    border-radius: 5px;
}

.analyzerList select::-webkit-scrollbar {
    width: 5px;
    /*Gives you width to the scrollbar*/
}

.analyzerList select::-webkit-scrollbar-track {
    -webkit-box-shadow: inset 0 0 4px rgba(189, 187, 187, 0.4);
    /*Gives styles to the scrollbar*/
}

.analyzerList select::-webkit-scrollbar-thumb {
    background-color: rgb(234, 133, 32);
    border-radius: 10px;
    /*Gives background color to the scrollbar*/
    outline: none;
}

@keyframes shake {

    10%,
    90% {
        transform: translate3d(-1px, 0, 0);
    }

    20%,
    80% {
        transform: translate3d(2px, 0, 0);
    }

    30%,
    50%,
    70% {
        transform: translate3d(-4px, 0, 0);
    }

    40%,
    60% {
        transform: translate3d(4px, 0, 0);
    }
}


.analyzerList select:focus {
    outline: none;
}


.selectedAnalyzers {
    display: flex;
    width: 100%;
}

.eachAnalyzer {
    margin: 5px;
}

.eachAnalyzer p {
    animation: fadeIn 2s;
    background-color: orange;
    padding: 3px 6px;
    cursor: pointer;
    transition: all 1s ease-in-out;
}

.eachAnalyzer p:hover {
    background-color: brown;
}

.error {
    color: red;
    animation: fadeIn 1.5s;
}

.counterUp {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    font-size: 18px;
    margin-top: 2rem;
    padding: 10px;
    background: #0F2027;
    /* fallback for old browsers */
    background: -webkit-linear-gradient(to right, #2C5364, #203A43, #0F2027);
    /* Chrome 10-25, Safari 5.1-6 */
    background: linear-gradient(to right, #2C5364, #203A43, #0F2027);
    /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
    color: white;
    animation: fadeIn 2s;
    box-shadow: 10px 5px 5px rgb(61, 61, 61);
}

.counter {
    font-weight: 600;
    font-size: 40px !important;
    border: none;
    padding: 2px 8px;
}

.createStationBtn {
    width: 120px;
    outline: none;
    border: none;
    cursor: pointer;
    text-transform: uppercase;
}

.hide {
    display: none;
}

.analyzerBtn {
    position: relative;
    border: none;
    display: flex;
    flex-direction: row;
    align-items: center;
    text-align: center;
    cursor: pointer;
    text-transform: uppercase;
    outline: none;
    overflow: hidden;
    color: #fff;
    font-weight: 600;
    font-size: 15px;
    background-image: linear-gradient(to top, #89a1e0 0%, #db97e1 100%);
    padding: 17px 60px;
    margin-top: 2rem;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.20);
}

.analyzerBtn span {
    position: relative;
    z-index: 1;
}

.analyzerBtn:after {
    content: "";
    position: absolute;
    left: 0;
    top: 0;
    height: 490%;
    width: 140%;
    background: #191b7e;
    -webkit-transition: all .5s ease-in-out;
    transition: all .5s ease-in-out;
    -webkit-transform: translateX(-98%) translateY(-25%) rotate(45deg);
    transform: translateX(-98%) translateY(-25%) rotate(45deg);
}

.analyzerBtn:hover:after {
    -webkit-transform: translateX(-9%) translateY(-25%) rotate(45deg);
    transform: translateX(-9%) translateY(-25%) rotate(45deg);
}

.offices {
    margin-top: 10px;
    width: 100%;
    border: 1px solid white;
    background-color: rgba(0, 0, 0, 0.2);
}

.networksSelection {
    margin-top: 5px;
    width: 100%;
}

.networksSelection select {
    width: 60%;
    text-align: center;
    background-color: #487262;
    color: white;
}



.checkBoxContainer {
    position: relative;
    font-size: 15px;
    padding: 5px;
    display: flex;
    justify-content: center;
    align-items: center;
}

.checkBoxContainer input[type='checkbox'] {
    cursor: pointer;
    opacity: 0;
    position: absolute;

}

.checkBoxContainer label {
    max-width: 150px;
    min-width: 150px;
    min-height: 25px;
    max-height: 25px;
    cursor: pointer;
    display: flex;
}

.checkBoxContainer label::before {
    content: '';
    border: 1px solid white;
    width: 1.1em;
    height: 1.1em;
    border-radius: .15em;
    margin-right: .5em;
}


.checkBoxContainer label:hover::before,
.checkBoxContainer input[type='checkbox']:hover+label::before {
    background-color: rgb(239, 243, 239);
}

.checkBoxContainer input[type='checkbox']:focus+label::before {
    box-shadow: 0 0 20px rgb(237, 210, 4);

}

.checkBoxContainer input[type='checkbox']:checked+label::before {
    background-color: #d1e728;
    content: '\002714';
    display: flex;
    justify-content: center;
    align-items: center;
    color: white;
}